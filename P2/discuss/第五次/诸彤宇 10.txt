---
teacher: 诸彤宇
group: 10
member:
   - 20231164 张岳霖
   - 20375007 汪文涵
   - 20373653 唐怡浜
   - 20373237 郑嘉文
   - 20373113 杨  灿


---

#  对电梯作业的架构设计进行解析与分享，突出性能设计

研讨课上，我们小组成员各自分享了自己的电梯的架构设计，主要对以下两点做了深入的分析。

1. 不同电梯调度算法的实现难度和总体性能分析
2. 其它能提高电梯性能的技巧

## 第一个主题：不同电梯调度算法的实现难度和总体性能分析

​	我们小组成员采用的调度算法方法有ALS调度算法和LOOK调度算法，故这一部分对这两种电梯调度算法进行了对比和分析。

​	小组同学认为，进行电梯调度需要考虑的问题主要有两个方面，一是电梯到达某一楼层后，该楼层的人是否进入电梯；二是电梯在什么时候换方向。

​	汪文涵同学采用的是ALS调度设计。该设计定义了一个主请求。当电梯中有人时，选择与电梯同方向且最近的请求为主请求；当电梯中没人时，选择最先到达等待队列的作为主请求。电梯运行方向与主请求的方向一致。当电梯到达某一楼层后，该楼层中与电梯运行方向相同的人可以进入电梯，作为被捎带请求。与常规ALS策略略有不同的是，汪文涵同学的调度策略中，主请求仅指导电梯的运行方向，不保证主请求一定在电梯上，也不会给主请求留位置。经过小组成员的探讨和分析，我们一致认为这种实现方法比常规ALS的效率要高。

​	张岳霖同学采用的是LOOK调度算法设计。这一算法设计的思想是在电梯当前运行方向上没有请求且电梯中没人时更换方向。当电梯到达某一层时，仍然是在保证电梯不超载的情况下让所有乘客登上电梯。分析LOOK算法的运行效果，其本质就是电梯上下不断扫描接人运人的过程。

​	对比这两种电梯调度算法，我们认为无论是在实现难度上还是在性能上，LOOK算法都要优于ALS算法。从实现难度角度看，LOOK算法不用寻找和定义主请求，而是将所有乘客一视同仁，当前方向无请求时直接向反方向运行，减少了很多琐碎的判断。相反ALS的寻找主请求设计则略显鸡肋；从性能上分析，张岳霖同学在课下分别实现了两种方法，用评测机对两种方法随机测试，发现LOOK算法的运行效率要高于ALS算法效率20%以上。从算法原理的角度我们也可以分析出来，LOOK算法最大限度的降低了电梯转向次数，让电梯少走重复的路。

## 第二个主题：其它能提高电梯性能的技巧

该问题主要聚焦同学们为优化性能，提升性能分的方法。

唐怡浜同学提出，自己在刚开始写电梯程序的时候，只要电梯在某一层时收到这层内有乘梯请求，那么电梯就会停下，相应请求，但这样造成自己在强测阶段性能分扣分很严重。

针对这个问题，汪文涵同学提出，在电梯向某个方向运行到某一楼层，且电梯内没有人要在该楼层下电梯时，应该判断电梯运行方向是否与当前楼层的乘梯请求的方向一致。如果不一致的话，电梯应继续移动，而非在该层开门。这样便节省了在某一层开关门所需的400ms。

同时，张岳霖同学提出，在处理某一楼层的上下客时，相比于惯性思维的“输出OPEN->sleep200ms->落客->上客->sleep200ms->输出CLOSE”的流程，可以选择将开关门各所用的200ms合并为400ms，然后再处理上下客，之后直接输出CLOSE信息，即采用“输出OPEN->sleep200+200=400ms->落客->上客->输出CLOSE”的流程。

这样的优点在于时序的安排之上。假设在惯性思维的时序中，有一些需要在电梯停靠的楼层上上电梯的请求在第二个“sleep200ms”时段输入，而电梯恰好还有位置，这个时候电梯就无法响应这个请求，从而导致数秒的性能浪费。而在张岳霖的想法之中，评测机要求的时序早已留好，所以这并不违反本次作业的正确性要求，同时又多出了200ms的时间用来等待可能插入的请求，这就提升了许多性能。

考虑到未来多型号电梯同时运行的情景，汪文涵同学还提出，由于目前电梯由于不允许换乘，所以只能在遇到合理请求时停梯接客，一开一停之间造成了效率的缺失。阻碍电梯运行效率的因素，一方面是调度策略，另一方面是停靠楼层太多。这就如同高铁一般，中间停靠站点的数量越少，起点到终点的运行时长就会越短。但同时，这就需要设计好亮好的换乘策略。如果未来的作业里出现了多型号的电梯，我们便可设计一个只停靠最底层、最高层与中间重要楼层的高速电梯，剩余的楼层由其它较慢的电梯来进行转运，这样就可以大幅提升电梯运行效率。

